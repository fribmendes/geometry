{"version":1,"ops":[{"type":3,"author":{"id":"940aabe64f74a4490b5129922ab6d0d7b9926a38"},"timestamp":1568003428,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTI5NTQ3Mg==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529295472"},"message":"hmm I wonder if there are better solutions than\n```zsh\n. \u003c(cat \"${GEOMETRY_ROOT}\"/functions/geometry_*.zsh)\n```\nor\n```zsh\nfor fun (\"${GEOMETRY_ROOT}\"/functions/geometry_*.zsh(N.)) . $fun; unset fun\n```","files":null},{"type":3,"author":{"id":"33950328296720bc91f2399d6dc2e05aaa877cba"},"timestamp":1568036644,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTQ4MTQzMw==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529481433"},"message":"You can declare the `fun` var `local` :)","files":null},{"type":3,"author":{"id":"940aabe64f74a4490b5129922ab6d0d7b9926a38"},"timestamp":1568037360,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTQ4Njc2Mg==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529486762"},"message":"Hmm I had to do `geometry::load() { local fun; for fun (\"${GEOMETRY_ROOT}\"/functions/geometry_*.zsh(N.)) . $fun }; geometry::load` for local to stick. Wish I could just have it be an anonymously invoked function.","files":null},{"type":4,"author":{"id":"940aabe64f74a4490b5129922ab6d0d7b9926a38"},"timestamp":1568038120,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjYxODgzMjU2Nw=="},"status":2},{"type":3,"author":{"id":"33950328296720bc91f2399d6dc2e05aaa877cba"},"timestamp":1568038203,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTQ5MzI1OQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529493259"},"message":"Ahso, so it was declared at global scope earlier, what would help when\nloading in a plugin manager but not when sourcing?\n\npon., 9 wrz 2019, 15:56 użytkownik Jonathan Dahan \u003cnotifications@github.com\u003e\nnapisał:\n\n\u003e Hmm I had to do geometry::load() { local fun; for fun\n\u003e (\"${GEOMETRY_ROOT}\"/functions/geometry_*.zsh(N.)) . $fun }; geometry::load\n\u003e for local to stick. Wish I could just have it be an anonymously invoked\n\u003e function.\n\u003e\n\u003e —\n\u003e You are receiving this because you authored the thread.\n\u003e Reply to this email directly, view it on GitHub\n\u003e \u003chttps://github.com/geometry-zsh/geometry/issues/269?email_source=notifications\u0026email_token=ABOE4CESBG7WZK5RK22B2Q3QIZIXDA5CNFSM4IUVKDQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6HVHKQ#issuecomment-529486762\u003e,\n\u003e or mute the thread\n\u003e \u003chttps://github.com/notifications/unsubscribe-auth/ABOE4CGOEWNJ67L23XS5V43QIZIXDANCNFSM4IUVKDQA\u003e\n\u003e .\n\u003e","files":null},{"type":3,"author":{"id":"940aabe64f74a4490b5129922ab6d0d7b9926a38"},"timestamp":1568043897,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTU0MDkxMQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529540911"},"message":"What is the difference between loading in a plugin manager and sourcing?\n\nRight now, when you source geometry.zsh, it will source everything in functions. I am open to doing something with fpath/autoload if there are tangible benefits but all my previous tries have failed using those.","files":null},{"type":3,"author":{"id":"33950328296720bc91f2399d6dc2e05aaa877cba"},"timestamp":1568053808,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTYwODEzMg==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529608132"},"message":"Plugin manager will load with a function, so `local` parameters will go out of scope.","files":null},{"type":3,"author":{"id":"940aabe64f74a4490b5129922ab6d0d7b9926a38"},"timestamp":1568065173,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTY3Nzg1OQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529677859"},"message":"Ahh yeah but we want all local parameters to go out of scope if possible I think. Does the current version of `geometry` have other obvious deficiencies?\n\nOut of that list of variables, ideally the user would only see `GEOMETRY_PROMPT`, `GEOMETRY_RPROMPT`, and `GEOMETRY_INFO`. I wonder if there are good ways to hide the other variables. Unfortunately they are all state that needs to exist outside of the prompt render loop.","files":null},{"type":3,"author":{"id":"33950328296720bc91f2399d6dc2e05aaa877cba"},"timestamp":1568075171,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyOTcxNzA0OA==","github-url":"https://github.com/geometry-zsh/geometry/issues/269#issuecomment-529717048"},"message":"I've recently drastically reduced the number of variables used in Zplugin by changing `A_MAP[A_$KEY]` into `ONE_MAIN_MAP[A_MAP__A_$KEY]`. Basically, with this technique, **all** possible variables can be put into a single map. I've had the comfort that I was having only maps, not integer-indexed arrays to reduce this way, so I've ven used vim patterns with `\\(…\\)` in them and substituted, but in general, even integer-indexed arrays are possible to be reduced with this method. For arrays I would however rather [serialize/deserialize](http://zdharma.org/Zsh-100-Commits-Club/Zsh-Native-Scripting-Handbook.html#serializing-data) them rather than use the above method.","files":null},{"type":6,"author":{"id":"33950328296720bc91f2399d6dc2e05aaa877cba"},"timestamp":1568075171,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI3NTY2MTgxNg=="},"target":"a5b5cb833ca4b39cec4fb9c1967f908bf58668eeef1a655a63511e7d6b103120","message":"I've recently drastically reduced the number of variables used in Zplugin by changing `A_MAP[A_$KEY]` into `ONE_MAIN_MAP[A_MAP__A_$KEY]`. Basically, with this technique, **all** possible variables can be put into a single map. I've had the comfort that I was having only maps, not integer-indexed arrays to reduce this way, so I've even used vim patterns with `\\(…\\)` in them and substituted, but in general, even integer-indexed arrays are possible to be reduced with this method. For arrays I would however rather [serialize/deserialize](http://zdharma.org/Zsh-100-Commits-Club/Zsh-Native-Scripting-Handbook.html#serializing-data) them rather than use the above method.","files":null}]}