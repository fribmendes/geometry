{"version":1,"ops":[{"type":5,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480422689,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg3NTE0OTY2MA=="},"added":["enhancement"],"removed":[]},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480422930,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU1OTA2Ng==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263559066"},"message":"I like this idea. It's starting to become difficult to maintain and the original idea behind geometry was trying to keep it minimal. I'd rather have a clean option with sane, minimal defaults and try to remove the unused code overhead.\n\nWhat's your take on option flags? For example the git conflict count. Would it still be set by an environment variable?","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480423487,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU2MDg4OQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263560889"},"message":"Yeah, I think so. All plugin-related environment variables will be defined -set up, defaults etc- in the plugin code, thus will be, sort of, invisible to geometry.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480423948,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU2MjQyMA==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263562420"},"message":"I'm definitely up for this. There are a few things we would need to decide though:\n\n- [ ] define minimal features\n- [ ] define plugin function API\n- [ ] define naming guidelines (function, variables and option flags)","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480426825,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU3MjM3Nw==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263572377"},"message":"As Minimal features:\n  - Ability to load informative prompts at run time (git, virtualenv, docker)\n  - Ability to load custom prompts\n\nPlugin interface:\n\n    # One-time only function to setup plugin configuration variables\n    # and register with geometry as a plugin\n    geometry_prompt_\u003cplugin_name\u003e_setup\n\n    # Prompt rendering function\n    geometry_prompt_\u003cplugin_name\u003e_render\n\n    # These probably belong to the plugin itself rather than geometry\n    GEOMETRY_PROMPT_\u003cplugin_name\u003e_ENABLED (?)\n    GEOMETRY_PROMPT_\u003cplugin_name\u003e_COLOR (?)\n\nOn the `geometry_prompt_\u003cplugin_name\u003e_setup` function the plugin will register itself with geometry as a plugin as follows:\n\n    geometry_prompt_\u003cplugin_name\u003e_setup () {\n        geometry_plugin_register \u003cplugin_name\u003e\n    }    \n\nOn `geometry_prompt_\u003cplugin_name\u003e_render` it will render itself, probably already colorized. Returning the final result.\n\nNaming guidelines could be as simple as:\n\n    `geometry_prompt_\u003cplugin_name\u003e_*` for functions, and `-geometry_prompt_\u003cplugin_name\u003e_*` for \"private\" functions.\n\n    `GEOMETRY_PROMPT_\u003cplugin_name\u003e_*` for configuration variables/flags.\n\nPrompt rendering order will depend on the registration/loading order, so it'll be fully manipulable by the user.\n\nI'm probably missing something out, but that's an initial attempt.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480427638,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU3NTUwNQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263575505"},"message":"I'm fine with the `setup/render` approach. The function and variable naming goes with what we already have set up. I'm finishing a README draft that can include those recommendations for contibuting.\n\nA couple more topics:\n\nHow would you implement the plugin file sourcing by geometry?\n\nWhat would the register function do, internally?\n\nWhat would be the core of geometry? I'm inclined to just use the theme with async properties.\n\nI also think we should have a `plugins/` directory, containing a directory per plugin with `\u003cplugin\u003e.zsh` and a `README.md`","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480428872,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4MDU2MA==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263580560"},"message":"\u003e How would you implement the plugin file sourcing by geometry?\n\nIn geometry's own setup function it'll iterate over the registered plugins and try to load the plugin by naming convention from geometry's own plugins: `$GEOMETRY_ROOT/plugins/geometry_prompt_\u003cplugin_name\u003e.zsh` \n\nCustom plugins will be sourced by the user after geometry:\n\n    source geometry.zsh # Will load default plugins: git, virtualenv etc\n    source custom_geometry_prompt.zsh # will register itself with geometry\n\nTo enable/disable default prompts:\n\n    GEOMETRY_PROMPT_DEFAULT_PROMPTS=(git virtualenv etc) \n\nBefore sourcing geometry.\n\n\u003e What would the register function do, internally?\n\nIt will add the plugin name to the registered plugins' array. Probably pre-formatting the prompt to keep performance reasonable.\n\n\u003e What would be the core of geometry? I'm inclined to just use the theme with async properties.\n\nAgreed. Most rprompt functions should be default plugins with git enabled by default.\n\n\u003e I also think we should have a plugins/ directory, containing a directory per plugin with \u003cplugin\u003e.zsh and a README.md\n\nAgreed.","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480429168,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4MTc2OA==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263581768"},"message":"I'm also thinking `shutdown` and `unregister` functions.\n\nBTW these changes can be fully backward compatible if we choose to load all default plugins by default and let them choose to be rendered or not (`setup` could return a flag to further be registered or not).","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480429486,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4MzE5OA==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263583198"},"message":"I like that the plugins get a `setup` function but if geometry will be iterating over the global array and the plugins will always be in the default directory, do they still need to register with geometry? The way I see that would be if it was a custom plugin that isn't bundled with geometry.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480429555,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4MzUxOQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263583519"},"message":"Can you elaborate on the `shutdown` function?","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480429901,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4NTA2OQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263585069"},"message":"Geometry itself will register the default plugins from `GEOMETRY_PROMPT_DEFAULT_PROMPTS` array in the `setup` function. Instead of registering they could be sourced, but I'd prefer to use the plugin interface.\n\nThe `shutdown` function will be defined, if needed, by plugins in order to call `unfunction`, remove variables, hooks etc. Probably called on the `unregister` function, used to remove informative prompts at run time.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480430542,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU4ODAwNQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263588005"},"message":"I'm fine with using the interface.\n\nHowever, I think this work should start in a separate branch and break backwards compatibility. Most of the current option flags should be set aside to an external plugin and leave only some defaults like git and async, as well as the prompt symbol/colors customization. I really like the idea of stripping down the prompt in order to get it minimal and have it grow according to the needs of each developer, not having a lot of defaults. We can bundle a bunch of plugins with the prompt to be set if the user wants to.","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480431331,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU5MTY0Mw==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263591643"},"message":"Fine. I'll create a feature branch today and sketch the minimal working version, we'll move from there.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1480431558,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU5Mjc4Mg==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263592782"},"message":"Cool. We can leave this issue open for future reference and for anyone to jump in and give their opinion, but we should probably keep PRs open to accompany progress and make decisions as they come up.","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1480431714,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzU5MzUzMg==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-263593532"},"message":"I'll leave this issue open for general discussion and feedback while keeping most technical details/implementation discussion on a PR.","files":null},{"type":3,"author":{"id":"d031c473ea44f2997770f844cf5bd248db34a431"},"timestamp":1481229498,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NTg0ODY0OA==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-265848648"},"message":"Once #45 gets merged, the new plugin architecture will be implemented. However, as you mentioned, there are still a couple of things remaining. Off the top of my head:\n\n- [x] README (on it)\n- [x] Add a README with documentation for each plugin\n- [ ] Compile step of default plugins into geometry (not necessary for 2.0, just a nice to-have)\n- [ ] Complete config for custom separator (some plugins still use default `::` as far as I could tell)\n- [ ] Enforce naming conventions\n- [ ] Left prompt customization","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1481232263,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NTg1OTc5OQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-265859799"},"message":"Alright. I'll be creating github issues for the point listed above. We can move from there.","files":null},{"type":3,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1481342950,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjE3NzU0NQ==","github-url":"https://github.com/geometry-zsh/geometry/issues/42#issuecomment-266177545"},"message":"I'm closing this up as plugin structure is already set up and deployed. Missing/pending points have their own [issues](https://github.com/frmendes/geometry/issues) to keep track of them.","files":null},{"type":4,"author":{"id":"d4eb9eb05c8e7e760e59ab8c578fae019321a3fc"},"timestamp":1481342950,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50ODg5MTk1NDcy"},"status":2}]}